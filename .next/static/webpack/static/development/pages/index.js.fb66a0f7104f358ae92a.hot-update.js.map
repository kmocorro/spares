{"version":3,"file":"static/webpack/static/development/pages/index.js.fb66a0f7104f358ae92a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\n\nimport { Container, Row, Col, Media, Collapse, Button, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Badge , Table } from 'reactstrap';\n\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n\n    const ranking = useRankingCollapse({collapse: true, status: 'Spares Details'});\n    \n    function useRankingCollapse(init){\n        const [value, setValue] = useState(init);\n\n        function handleOnEntering(){\n            setValue({collapse: true, status: 'Opening...' });\n        }\n\n        function handleOnEntered(){\n            setValue({collapse: true, status: 'Hide' });\n        }\n\n        function handleOnExiting(){\n            setValue({collapse: false, status: 'Closing...' });\n        }\n        \n        function handleOnExited(){\n            setValue({collapse: false, status: 'Spares Details' });\n        }\n\n        function handleOnToggle(){\n            setValue(value => ({ collapse: !value.collapse }))\n        }\n        \n        return {\n            value,\n            onEntering: handleOnEntering,\n            onEntered: handleOnEntered,\n            onExiting: handleOnExiting, \n            onExited: handleOnExited,\n            onToggle: handleOnToggle\n        }\n        \n    }\n\n\n    console.log(props.data);\n\n    return (\n        <Layout>\n        <Container>\n            <Row>\n                <Col md={{ size: 3, order: 1}}>\n                    <div style={{\n                        marginTop: 28\n                    }}>\n                        <ListGroup>\n                            {props.data.summary.map(data => (\n                                <ListGroupItem key={data.RANKING} >{data.ToolGrp} <Badge pill>{data.Count}</Badge></ListGroupItem>\n                            ))}\n                        </ListGroup>\n                    </div>\n                </Col>\n                <Col md={{ size: 6, order: 2 }}>\n                    <div style={{\n\n                        marginTop: 28\n                    }}>\n                        {props.data.details.map(data => (\n                            <Media key={data.RANK} style={{paddingBottom: 24}}>\n                                <Media left href=\"#\">\n                                    <Media style={{width: 80, height: 80, borderRadius: `50%`, marginRight: 10}} object src={`http://dev-metaspf401.sunpowercorp.com:8080/images/spares/${data.ToolOwnerImage}`} alt=\"Generic placeholder image\" />\n                                </Media>\n                                <Media body>\n                                    <Media heading>\n                                    <small style={{fontWeight: 200, fontSize: 14, opacity: 0.5}}>item: </small>\n                                    {data.Item} \n                                    <Badge id={data.Item} style={{float:`right`}} color=\"danger\" pill>      {data['UsageRate%']}\n                                    </Badge>\n                                    </Media>\n                                    {data.Desc} <Badge style={{float:`right`}} color=\"dark\" >{data['QDemand']}</Badge><Badge style={{float:`right`}} color=\"warning\" >{data['QCons']}</Badge>\n                                </Media>\n                            </Media>\n                        ))}\n                        \n                    </div>\n                </Col>\n                <Col md={{ size: 3, order: 3 }}>\n                    <div style={{ \n                        position: `-webkit-sticky`, /* Safari */\n                        position: `sticky`,\n                        top: 0,\n                        marginTop: 28\n                    }} >\n                        <Button block outline onClick={ranking.onToggle} style={{ marginBottom: '0rem' }}>{ranking.value.status}</Button>\n                        <Collapse\n                        isOpen={ranking.value.collapse}\n                        onEntering={ranking.onEntering}\n                        onEntered={ranking.onEntered}\n                        onExiting={ranking.onExiting}\n                        onExited={ranking.onExited}\n                        >\n                        {\n                            props.data.details.map(data => (\n                            <ListGroup key={data.RANK}>\n                                <ListGroupItem>\n                                    <ListGroupItemHeading>{data.Item} - {data.ToolGrp}</ListGroupItemHeading>\n                                    <Table borderless style={{fontSize: 12}}>\n                                    <tbody>\n                                    <tr>\n                                        <td></td>\n                                        <td>Otto</td>\n                                        <td>@mdo</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Jacob</td>\n                                        <td>Thornton</td>\n                                        <td>@fat</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Larry</td>\n                                        <td>the Bird</td>\n                                        <td>@twitter</td>\n                                    </tr>\n                                    </tbody>\n                                    </Table>\n                                </ListGroupItem>\n                            </ListGroup>\n                            ))\n                        }\n                        \n                        </Collapse>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n        </Layout>\n    )\n\n}\n\nIndex.getInitialProps = async function(){\n    const res = await fetch('http://dev-metaspf401.sunpowercorp.com:8080/api/spares');\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.summary.length}`);\n\n    return {\n        data\n    };\n}\n\n\nexport default Index;"],"mappings":"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","sourceRoot":""}